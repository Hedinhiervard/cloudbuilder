/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "CloudBuilderMarmalade_autodefs.h"
#include "s3eEdk.h"
#include "CloudBuilderMarmalade.h"
//Declarations of Init and Term functions
extern s3eResult CloudBuilderMarmaladeInit();
extern void CloudBuilderMarmaladeTerminate();


const char* CloudBuilderMarmaladeGetErrorString()
{
#ifdef S3E_STORE_ERROR_STRINGS
	return s3eEdkErrorGetString(S3E_EXT_CLOUDBUILDERMARMALADE_HASH);
#else
	return NULL;
#endif
}

CloudBuilderMarmaladeError CloudBuilderMarmaladeGetError()
{
	return (CloudBuilderMarmaladeError) s3eEdkErrorGet(S3E_EXT_CLOUDBUILDERMARMALADE_HASH);
}

// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void** CloudBuilder_Init_wrap(void** aCotCFunctions)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: CloudBuilder_Init"));
	return (void**)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)CloudBuilder_Init, 1, aCotCFunctions);
}

static void CloudBuilder_SetGlobalCotCCallback_wrap(CloudBuilderMarmaladeCallback aIndex, s3eCallback aCallback, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: CloudBuilder_SetGlobalCotCCallback"));
	s3eEdkThreadRunOnOS((s3eEdkThreadFunc)CloudBuilder_SetGlobalCotCCallback, 3, aIndex, aCallback, aUserData);
}

static void CloudBuilder_PopCallback_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: CloudBuilder_PopCallback"));
	s3eEdkThreadRunOnOS((s3eEdkThreadFunc)CloudBuilder_PopCallback, 0);
}

static s3eResult Clan_Setup_wrap(const char* aConfigurationJson, s3eCallback aClan_didSetup, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Clan_Setup"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Clan_Setup, 3, aConfigurationJson, aClan_didSetup, aUserData);
}

static s3eResult Clan_BatchBegin_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Clan_BatchBegin"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Clan_BatchBegin, 0);
}

static s3eResult Clan_BatchEnd_wrap(s3eCallback aClan_didBatchEnd, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Clan_BatchEnd"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Clan_BatchEnd, 2, aClan_didBatchEnd, aUserData);
}

static bool Clan_isSetup_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Clan_isSetup"));
	return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Clan_isSetup, 0);
}

static bool Clan_isUserLogged_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Clan_isUserLogged"));
	return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Clan_isUserLogged, 0);
}

static s3eResult User_RegisterAndLogin_wrap(const char* aEmail, const char* aPassword, const char* aPseudo, s3eCallback aUser_didRegisterAndLogin, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_RegisterAndLogin"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_RegisterAndLogin, 5, aEmail, aPassword, aPseudo, aUser_didRegisterAndLogin, aUserData);
}

static s3eResult User_Login_wrap(const char* aPseudo, const char* aPassword, s3eCallback aUser_didLogin, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_Login"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_Login, 4, aPseudo, aPassword, aUser_didLogin, aUserData);
}

static s3eResult User_LoginWithFacebook_wrap(const char* aOptionalPassword, s3eCallback aUser_didLoginWithFacebook, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LoginWithFacebook"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LoginWithFacebook, 3, aOptionalPassword, aUser_didLoginWithFacebook, aUserData);
}

static s3eResult User_LoginWithGooglePlus_wrap(const char* aOptionalPassword, s3eCallback aUser_didLoginWithGooglePlus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LoginWithGooglePlus"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LoginWithGooglePlus, 3, aOptionalPassword, aUser_didLoginWithGooglePlus, aUserData);
}

static s3eResult User_LoginWithGameCenter_wrap(s3eCallback aUser_didLoginWithGameCenter, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LoginWithGameCenter"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LoginWithGameCenter, 2, aUser_didLoginWithGameCenter, aUserData);
}

static s3eResult User_Logout_wrap(s3eCallback aUser_didLogout, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_Logout"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_Logout, 2, aUser_didLogout, aUserData);
}

static s3eResult User_LinkAccountWithFacebook_wrap(s3eCallback aUser_didLinkAccountWithFacebook, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LinkAccountWithFacebook"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LinkAccountWithFacebook, 2, aUser_didLinkAccountWithFacebook, aUserData);
}

static s3eResult User_LinkAccountWithGooglePlus_wrap(s3eCallback aUser_didLinkAccountWithGooglePlus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LinkAccountWithGooglePlus"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LinkAccountWithGooglePlus, 2, aUser_didLinkAccountWithGooglePlus, aUserData);
}

static s3eResult User_LinkAccountWithGameCenter_wrap(s3eCallback aUser_didLinkAccountWithGameCenter, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_LinkAccountWithGameCenter"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_LinkAccountWithGameCenter, 2, aUser_didLinkAccountWithGameCenter, aUserData);
}

static s3eResult User_ChangePassword_wrap(const char* aOldPassword, const char* aNewPassword, s3eCallback aUser_didChangePassword, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_ChangePassword"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_ChangePassword, 4, aOldPassword, aNewPassword, aUser_didChangePassword, aUserData);
}

static s3eResult User_MailPassword_wrap(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aUser_didMailPassword, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_MailPassword"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_MailPassword, 5, aEmail, aSubject, aBody, aUser_didMailPassword, aUserData);
}

static s3eResult User_SetUserProfile_wrap(const char* aJson, s3eCallback aUser_didSetUserProfile, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_SetUserProfile"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_SetUserProfile, 3, aJson, aUser_didSetUserProfile, aUserData);
}

static s3eResult User_GetUserProfile_wrap(s3eCallback aUser_didGetUserProfile, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_GetUserProfile"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_GetUserProfile, 2, aUser_didGetUserProfile, aUserData);
}

static const char* User_GetPseudo_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_GetPseudo"));
	return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_GetPseudo, 0);
}

static const char* User_GetMail_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_GetMail"));
	return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_GetMail, 0);
}

static s3eResult User_PublishOnMyFacebookWall_wrap(const char* aMessage, s3eCallback aUser_didPublishOnMyFacebookWall, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_PublishOnMyFacebookWall"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_PublishOnMyFacebookWall, 3, aMessage, aUser_didPublishOnMyFacebookWall, aUserData);
}

static s3eResult User_ReadBinary_wrap(const char* aKey, s3eCallback aUser_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_ReadBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_ReadBinary, 3, aKey, aUser_didReadBinary, aUserData);
}

static s3eResult User_WriteBinary_wrap(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aUser_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_WriteBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_WriteBinary, 5, aKey, aPointer, aLength, aUser_didWriteBinary, aUserData);
}

static s3eResult User_Read_wrap(const char* aKey, s3eCallback aUser_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_Read"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_Read, 3, aKey, aUser_didRead, aUserData);
}

static s3eResult User_Write_wrap(const char* aKey, const char* aValue, s3eCallback aUser_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_Write"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_Write, 4, aKey, aValue, aUser_didWrite, aUserData);
}

static s3eResult User_SetProperties_wrap(bool aCanBeFound, const char* aPropertiesJson, s3eCallback aUser_didSetProperties, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_SetProperties"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_SetProperties, 4, aCanBeFound, aPropertiesJson, aUser_didSetProperties, aUserData);
}

static s3eResult User_GetProperties_wrap(s3eCallback aUser_didGetProperties, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_GetProperties"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_GetProperties, 2, aUser_didGetProperties, aUserData);
}

static s3eResult User_CheckUser_wrap(const char* aIdent, s3eCallback aUser_didCheckUser, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_CheckUser"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_CheckUser, 3, aIdent, aUser_didCheckUser, aUserData);
}

static s3eResult User_SetAvatarSource_wrap(cbmExternalNetwork aSource, s3eCallback aUser_didSetAvatarSource, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: User_SetAvatarSource"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)User_SetAvatarSource, 3, aSource, aUser_didSetAvatarSource, aUserData);
}

static s3eResult Game_Score_wrap(long long aHighScore, const char* aMode, cbmScoreType aScoreType, const char* aInfoScore, bool aMayVary, s3eCallback aGame_didScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_Score"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_Score, 7, aHighScore, aMode, aScoreType, aInfoScore, aMayVary, aGame_didScore, aUserData);
}

static s3eResult Game_GetRank_wrap(long long aHighScore, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didGetRank, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_GetRank"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_GetRank, 5, aHighScore, aMode, aScoreType, aGame_didGetRank, aUserData);
}

static s3eResult Game_BestHighScore_wrap(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_BestHighScore"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_BestHighScore, 5, aCount, aMode, aScoreType, aGame_didBestHighScore, aUserData);
}

static s3eResult Game_CenteredScore_wrap(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didCenteredScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_CenteredScore"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_CenteredScore, 5, aCount, aMode, aScoreType, aGame_didCenteredScore, aUserData);
}

static s3eResult Game_GetRankArray_wrap(const char* aScoreArrayJson, cbmScoreType aScoreType, s3eCallback aGame_didGetRankArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_GetRankArray"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_GetRankArray, 4, aScoreArrayJson, aScoreType, aGame_didGetRankArray, aUserData);
}

static s3eResult Game_BestHighScoreArray_wrap(int aCount, const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScoreArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_BestHighScoreArray"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_BestHighScoreArray, 5, aCount, aArrayModesJson, aScoreType, aGame_didBestHighScoreArray, aUserData);
}

static s3eResult Game_ReadBinary_wrap(const char* aKey, s3eCallback aGame_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_ReadBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_ReadBinary, 3, aKey, aGame_didReadBinary, aUserData);
}

static s3eResult Game_WriteBinary_wrap(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aGame_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_WriteBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_WriteBinary, 5, aKey, aPointer, aLength, aGame_didWriteBinary, aUserData);
}

static s3eResult Game_Read_wrap(const char* aKey, s3eCallback aGame_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_Read"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_Read, 3, aKey, aGame_didRead, aUserData);
}

static s3eResult Game_Write_wrap(const char* aKey, const char* aValue, s3eCallback aGame_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Game_Write"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Game_Write, 4, aKey, aValue, aGame_didWrite, aUserData);
}

static s3eResult Tribe_ListUsers_wrap(const char* aContainsString, s3eCallback aTribe_didListUsers, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListUsers"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListUsers, 3, aContainsString, aTribe_didListUsers, aUserData);
}

static s3eResult Tribe_ListGlobalFriends_wrap(s3eCallback aTribe_didListGlobalFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListGlobalFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListGlobalFriends, 2, aTribe_didListGlobalFriends, aUserData);
}

static s3eResult Tribe_BlacklistGlobalFriends_wrap(s3eCallback aTribe_didBlacklistGlobalFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_BlacklistGlobalFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_BlacklistGlobalFriends, 2, aTribe_didBlacklistGlobalFriends, aUserData);
}

static s3eResult Tribe_ChangeGlobalRelationshipStatus_wrap(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeGlobalRelationshipStatus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ChangeGlobalRelationshipStatus"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ChangeGlobalRelationshipStatus, 4, aFriendPseudo, aNewState, aTribe_didChangeGlobalRelationshipStatus, aUserData);
}

static s3eResult Tribe_ListFriends_wrap(s3eCallback aTribe_didListFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListFriends, 2, aTribe_didListFriends, aUserData);
}

static s3eResult Tribe_BlacklistFriends_wrap(s3eCallback aTribe_didBlacklistFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_BlacklistFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_BlacklistFriends, 2, aTribe_didBlacklistFriends, aUserData);
}

static s3eResult Tribe_ChangeRelationshipStatus_wrap(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeRelationshipStatus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ChangeRelationshipStatus"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ChangeRelationshipStatus, 4, aFriendPseudo, aNewState, aTribe_didChangeRelationshipStatus, aUserData);
}

static s3eResult Tribe_ListFacebookFriends_wrap(s3eCallback aTribe_didListFacebookFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListFacebookFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListFacebookFriends, 2, aTribe_didListFacebookFriends, aUserData);
}

static s3eResult Tribe_ListGooglePlusFriends_wrap(s3eCallback aTribe_didListGooglePlusFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListGooglePlusFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListGooglePlusFriends, 2, aTribe_didListGooglePlusFriends, aUserData);
}

static s3eResult Tribe_ListGameCenterFriends_wrap(s3eCallback aTribe_didListGameCenterFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_ListGameCenterFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_ListGameCenterFriends, 2, aTribe_didListGameCenterFriends, aUserData);
}

static s3eResult Tribe_InviteFriendByMail_wrap(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aTribe_didInviteFriendByMail, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_InviteFriendByMail"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_InviteFriendByMail, 5, aEmail, aSubject, aBody, aTribe_didInviteFriendByMail, aUserData);
}

static s3eResult Tribe_InviteFriendByFBID_wrap(const char* aFBFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByFBID, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_InviteFriendByFBID"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_InviteFriendByFBID, 4, aFBFriendID, aParamsJson, aTribe_didInviteFriendByFBID, aUserData);
}

static s3eResult Tribe_InviteFriendByGooglePlusID_wrap(const char* aGooglePlusFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByGooglePlusID, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_InviteFriendByGooglePlusID"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_InviteFriendByGooglePlusID, 4, aGooglePlusFriendID, aParamsJson, aTribe_didInviteFriendByGooglePlusID, aUserData);
}

static s3eResult Tribe_FriendsBestHighScore_wrap(const char* aMode, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_FriendsBestHighScore"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_FriendsBestHighScore, 4, aMode, aScoreType, aTribe_didFriendsBestHighScore, aUserData);
}

static s3eResult Tribe_FriendsBestHighScoreArray_wrap(const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScoreArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_FriendsBestHighScoreArray"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_FriendsBestHighScoreArray, 4, aArrayModesJson, aScoreType, aTribe_didFriendsBestHighScoreArray, aUserData);
}

static s3eResult Tribe_FindOpponents_wrap(const char* aFilterJson, s3eCallback aTribe_didFindOpponents, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Tribe_FindOpponents"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Tribe_FindOpponents, 3, aFilterJson, aTribe_didFindOpponents, aUserData);
}

static const char* Match_GetActiveMatchID_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_GetActiveMatchID"));
	return (const char*)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_GetActiveMatchID, 0);
}

static bool Match_HasActiveMatch_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_HasActiveMatch"));
	return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_HasActiveMatch, 0);
}

static s3eResult Match_GetMatchData_wrap(const char* aMatchID, s3eCallback aMatch_didGetMatchData, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_GetMatchData"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_GetMatchData, 3, aMatchID, aMatch_didGetMatchData, aUserData);
}

static s3eResult Match_ListMatch_wrap(bool aIncludeAllData, s3eCallback aMatch_didListMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_ListMatch"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_ListMatch, 3, aIncludeAllData, aMatch_didListMatch, aUserData);
}

static s3eResult Match_ListPendingMatch_wrap(s3eCallback aMatch_didListPendingMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_ListPendingMatch"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_ListPendingMatch, 2, aMatch_didListPendingMatch, aUserData);
}

static s3eResult Match_CreateMatch_wrap(const char* aName, bool aPrivateMatch, const char* aMatchDataJson, s3eCallback aMatch_didCreateMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_CreateMatch"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_CreateMatch, 5, aName, aPrivateMatch, aMatchDataJson, aMatch_didCreateMatch, aUserData);
}

static s3eResult Match_InviteFriends_wrap(const char* aMatchID, const char* aArrayFriendsJson, bool aAutoAccept, const char* aNotifMessageJson, s3eCallback aMatch_didInviteFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_InviteFriends"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_InviteFriends, 6, aMatchID, aArrayFriendsJson, aAutoAccept, aNotifMessageJson, aMatch_didInviteFriends, aUserData);
}

static s3eResult Match_JoinMatch_wrap(const char* aMatchID, bool aAccept, const char* aNotifMessageJson, s3eCallback aMatch_didJoinMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_JoinMatch"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_JoinMatch, 5, aMatchID, aAccept, aNotifMessageJson, aMatch_didJoinMatch, aUserData);
}

static s3eResult Match_MatchMove_wrap(cbmMatchPhase aMatchPhase, const char* aMatchID, const char* aMatchStateJson, const char* aNotifMessageJson, s3eCallback aMatch_didMatchMove, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_MatchMove"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_MatchMove, 6, aMatchPhase, aMatchID, aMatchStateJson, aNotifMessageJson, aMatch_didMatchMove, aUserData);
}

static s3eResult Match_ReadBinary_wrap(const char* aMatchID, const char* aKey, s3eCallback aMatch_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_ReadBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_ReadBinary, 4, aMatchID, aKey, aMatch_didReadBinary, aUserData);
}

static s3eResult Match_WriteBinary_wrap(const char* aMatchID, const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aMatch_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_WriteBinary"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_WriteBinary, 6, aMatchID, aKey, aPointer, aLength, aMatch_didWriteBinary, aUserData);
}

static s3eResult Match_Read_wrap(const char* aMatchID, const char* aKey, s3eCallback aMatch_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_Read"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_Read, 4, aMatchID, aKey, aMatch_didRead, aUserData);
}

static s3eResult Match_Write_wrap(const char* aMatchID, const char* aKey, const char* aValue, s3eCallback aMatch_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Match_Write"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Match_Write, 5, aMatchID, aKey, aValue, aMatch_didWrite, aUserData);
}

static s3eResult Notification_NotifyUser_wrap(const char* aUserPseudo, const char* aDataJson, void* aReference, const char* apnMessageJson, s3eCallback aNotification_didNotifyUser, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: Notification_NotifyUser"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)Notification_NotifyUser, 6, aUserPseudo, aDataJson, aReference, apnMessageJson, aNotification_didNotifyUser, aUserData);
}

static bool GooglePlay_IsConnected_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_IsConnected"));
	return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_IsConnected, 0);
}

static s3eResult GooglePlay_LoadPeople_wrap(const char* aListPeopleJSON, s3eCallback aGooglePlay_didLoadPeople, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadPeople"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadPeople, 3, aListPeopleJSON, aGooglePlay_didLoadPeople, aUserData);
}

static s3eResult GooglePlay_ShowAllLeaderboards_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_ShowAllLeaderboards"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_ShowAllLeaderboards, 0);
}

static s3eResult GooglePlay_ShowLeaderboard_wrap(const char* aLeaderboardID)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_ShowLeaderboard"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_ShowLeaderboard, 1, aLeaderboardID);
}

static s3eResult GooglePlay_SubmitScore_wrap(const char* aLeaderboardID, long aScore, const char* aTag, s3eCallback aGooglePlay_didSubmitScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_SubmitScore"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_SubmitScore, 5, aLeaderboardID, aScore, aTag, aGooglePlay_didSubmitScore, aUserData);
}

static s3eResult GooglePlay_LoadLeaderboardMetadata_wrap(const char* aLeaderboardID, s3eCallback aGooglePlay_didLoadLeaderboardMetadata, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadLeaderboardMetadata"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadLeaderboardMetadata, 3, aLeaderboardID, aGooglePlay_didLoadLeaderboardMetadata, aUserData);
}

static s3eResult GooglePlay_LoadLeaderboardsMetadata_wrap(s3eCallback aGooglePlay_didLoadLeaderboardsMetadata, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadLeaderboardsMetadata"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadLeaderboardsMetadata, 2, aGooglePlay_didLoadLeaderboardsMetadata, aUserData);
}

static s3eResult GooglePlay_LoadPlayerCenteredScores_wrap(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadPlayerCenteredScores, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadPlayerCenteredScores"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadPlayerCenteredScores, 7, aLeaderboardID, aSpan, aLeaderboardCollection, aMaxResults, aForceReload, aGooglePlay_didLoadPlayerCenteredScores, aUserData);
}

static s3eResult GooglePlay_LoadTopScores_wrap(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadTopScores, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadTopScores"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadTopScores, 7, aLeaderboardID, aSpan, aLeaderboardCollection, aMaxResults, aForceReload, aGooglePlay_didLoadTopScores, aUserData);
}

static s3eResult GooglePlay_ShowAchievements_wrap()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_ShowAchievements"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_ShowAchievements, 0);
}

static s3eResult GooglePlay_IncrementAchievement_wrap(const char* aAchievementID, int aNumSteps, s3eCallback aGooglePlay_didIncrementAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_IncrementAchievement"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_IncrementAchievement, 4, aAchievementID, aNumSteps, aGooglePlay_didIncrementAchievement, aUserData);
}

static s3eResult GooglePlay_LoadAchievements_wrap(bool aForceReload, s3eCallback aGooglePlay_didLoadAchievements, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_LoadAchievements"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_LoadAchievements, 3, aForceReload, aGooglePlay_didLoadAchievements, aUserData);
}

static s3eResult GooglePlay_RevealAchievement_wrap(const char* aAchievementID, s3eCallback aGooglePlay_didRevealAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_RevealAchievement"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_RevealAchievement, 3, aAchievementID, aGooglePlay_didRevealAchievement, aUserData);
}

static s3eResult GooglePlay_UnlockAchievement_wrap(const char* aAchievementID, s3eCallback aGooglePlay_didUnlockAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade func on main thread: GooglePlay_UnlockAchievement"));
	return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)GooglePlay_UnlockAchievement, 3, aAchievementID, aGooglePlay_didUnlockAchievement, aUserData);
}

#define CloudBuilder_Init CloudBuilder_Init_wrap
#define CloudBuilder_SetGlobalCotCCallback CloudBuilder_SetGlobalCotCCallback_wrap
#define CloudBuilder_PopCallback CloudBuilder_PopCallback_wrap
#define Clan_Setup Clan_Setup_wrap
#define Clan_BatchBegin Clan_BatchBegin_wrap
#define Clan_BatchEnd Clan_BatchEnd_wrap
#define Clan_isSetup Clan_isSetup_wrap
#define Clan_isUserLogged Clan_isUserLogged_wrap
#define User_RegisterAndLogin User_RegisterAndLogin_wrap
#define User_Login User_Login_wrap
#define User_LoginWithFacebook User_LoginWithFacebook_wrap
#define User_LoginWithGooglePlus User_LoginWithGooglePlus_wrap
#define User_LoginWithGameCenter User_LoginWithGameCenter_wrap
#define User_Logout User_Logout_wrap
#define User_LinkAccountWithFacebook User_LinkAccountWithFacebook_wrap
#define User_LinkAccountWithGooglePlus User_LinkAccountWithGooglePlus_wrap
#define User_LinkAccountWithGameCenter User_LinkAccountWithGameCenter_wrap
#define User_ChangePassword User_ChangePassword_wrap
#define User_MailPassword User_MailPassword_wrap
#define User_SetUserProfile User_SetUserProfile_wrap
#define User_GetUserProfile User_GetUserProfile_wrap
#define User_GetPseudo User_GetPseudo_wrap
#define User_GetMail User_GetMail_wrap
#define User_PublishOnMyFacebookWall User_PublishOnMyFacebookWall_wrap
#define User_ReadBinary User_ReadBinary_wrap
#define User_WriteBinary User_WriteBinary_wrap
#define User_Read User_Read_wrap
#define User_Write User_Write_wrap
#define User_SetProperties User_SetProperties_wrap
#define User_GetProperties User_GetProperties_wrap
#define User_CheckUser User_CheckUser_wrap
#define User_SetAvatarSource User_SetAvatarSource_wrap
#define Game_Score Game_Score_wrap
#define Game_GetRank Game_GetRank_wrap
#define Game_BestHighScore Game_BestHighScore_wrap
#define Game_CenteredScore Game_CenteredScore_wrap
#define Game_GetRankArray Game_GetRankArray_wrap
#define Game_BestHighScoreArray Game_BestHighScoreArray_wrap
#define Game_ReadBinary Game_ReadBinary_wrap
#define Game_WriteBinary Game_WriteBinary_wrap
#define Game_Read Game_Read_wrap
#define Game_Write Game_Write_wrap
#define Tribe_ListUsers Tribe_ListUsers_wrap
#define Tribe_ListGlobalFriends Tribe_ListGlobalFriends_wrap
#define Tribe_BlacklistGlobalFriends Tribe_BlacklistGlobalFriends_wrap
#define Tribe_ChangeGlobalRelationshipStatus Tribe_ChangeGlobalRelationshipStatus_wrap
#define Tribe_ListFriends Tribe_ListFriends_wrap
#define Tribe_BlacklistFriends Tribe_BlacklistFriends_wrap
#define Tribe_ChangeRelationshipStatus Tribe_ChangeRelationshipStatus_wrap
#define Tribe_ListFacebookFriends Tribe_ListFacebookFriends_wrap
#define Tribe_ListGooglePlusFriends Tribe_ListGooglePlusFriends_wrap
#define Tribe_ListGameCenterFriends Tribe_ListGameCenterFriends_wrap
#define Tribe_InviteFriendByMail Tribe_InviteFriendByMail_wrap
#define Tribe_InviteFriendByFBID Tribe_InviteFriendByFBID_wrap
#define Tribe_InviteFriendByGooglePlusID Tribe_InviteFriendByGooglePlusID_wrap
#define Tribe_FriendsBestHighScore Tribe_FriendsBestHighScore_wrap
#define Tribe_FriendsBestHighScoreArray Tribe_FriendsBestHighScoreArray_wrap
#define Tribe_FindOpponents Tribe_FindOpponents_wrap
#define Match_GetActiveMatchID Match_GetActiveMatchID_wrap
#define Match_HasActiveMatch Match_HasActiveMatch_wrap
#define Match_GetMatchData Match_GetMatchData_wrap
#define Match_ListMatch Match_ListMatch_wrap
#define Match_ListPendingMatch Match_ListPendingMatch_wrap
#define Match_CreateMatch Match_CreateMatch_wrap
#define Match_InviteFriends Match_InviteFriends_wrap
#define Match_JoinMatch Match_JoinMatch_wrap
#define Match_MatchMove Match_MatchMove_wrap
#define Match_ReadBinary Match_ReadBinary_wrap
#define Match_WriteBinary Match_WriteBinary_wrap
#define Match_Read Match_Read_wrap
#define Match_Write Match_Write_wrap
#define Notification_NotifyUser Notification_NotifyUser_wrap
#define GooglePlay_IsConnected GooglePlay_IsConnected_wrap
#define GooglePlay_LoadPeople GooglePlay_LoadPeople_wrap
#define GooglePlay_ShowAllLeaderboards GooglePlay_ShowAllLeaderboards_wrap
#define GooglePlay_ShowLeaderboard GooglePlay_ShowLeaderboard_wrap
#define GooglePlay_SubmitScore GooglePlay_SubmitScore_wrap
#define GooglePlay_LoadLeaderboardMetadata GooglePlay_LoadLeaderboardMetadata_wrap
#define GooglePlay_LoadLeaderboardsMetadata GooglePlay_LoadLeaderboardsMetadata_wrap
#define GooglePlay_LoadPlayerCenteredScores GooglePlay_LoadPlayerCenteredScores_wrap
#define GooglePlay_LoadTopScores GooglePlay_LoadTopScores_wrap
#define GooglePlay_ShowAchievements GooglePlay_ShowAchievements_wrap
#define GooglePlay_IncrementAchievement GooglePlay_IncrementAchievement_wrap
#define GooglePlay_LoadAchievements GooglePlay_LoadAchievements_wrap
#define GooglePlay_RevealAchievement GooglePlay_RevealAchievement_wrap
#define GooglePlay_UnlockAchievement GooglePlay_UnlockAchievement_wrap

#endif

s3eResult CloudBuilderMarmaladeRegister(CloudBuilderMarmaladeCallback cbid, s3eCallback fn, void* pData)
{
	return s3eEdkCallbacksRegister(S3E_EXT_CLOUDBUILDERMARMALADE_HASH, CLOUDBUILDERMARMALADE_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult CloudBuilderMarmaladeUnRegister(CloudBuilderMarmaladeCallback cbid, s3eCallback fn)
{
	return s3eEdkCallbacksUnRegister(S3E_EXT_CLOUDBUILDERMARMALADE_HASH, CLOUDBUILDERMARMALADE_CALLBACK_MAX, cbid, fn);
}

void CloudBuilderMarmaladeRegisterExt()
{
	/* fill in the function pointer struct for this extension */
	void* funcPtrs[90];
	funcPtrs[0] = (void*)CloudBuilderMarmaladeRegister;
	funcPtrs[1] = (void*)CloudBuilderMarmaladeUnRegister;
	funcPtrs[2] = (void*)CloudBuilderMarmaladeGetErrorString;
	funcPtrs[3] = (void*)CloudBuilderMarmaladeGetError;
	funcPtrs[4] = (void*)CloudBuilder_Init;
	funcPtrs[5] = (void*)CloudBuilder_SetGlobalCotCCallback;
	funcPtrs[6] = (void*)CloudBuilder_PopCallback;
	funcPtrs[7] = (void*)Clan_Setup;
	funcPtrs[8] = (void*)Clan_BatchBegin;
	funcPtrs[9] = (void*)Clan_BatchEnd;
	funcPtrs[10] = (void*)Clan_isSetup;
	funcPtrs[11] = (void*)Clan_isUserLogged;
	funcPtrs[12] = (void*)User_RegisterAndLogin;
	funcPtrs[13] = (void*)User_Login;
	funcPtrs[14] = (void*)User_LoginWithFacebook;
	funcPtrs[15] = (void*)User_LoginWithGooglePlus;
	funcPtrs[16] = (void*)User_LoginWithGameCenter;
	funcPtrs[17] = (void*)User_Logout;
	funcPtrs[18] = (void*)User_LinkAccountWithFacebook;
	funcPtrs[19] = (void*)User_LinkAccountWithGooglePlus;
	funcPtrs[20] = (void*)User_LinkAccountWithGameCenter;
	funcPtrs[21] = (void*)User_ChangePassword;
	funcPtrs[22] = (void*)User_MailPassword;
	funcPtrs[23] = (void*)User_SetUserProfile;
	funcPtrs[24] = (void*)User_GetUserProfile;
	funcPtrs[25] = (void*)User_GetPseudo;
	funcPtrs[26] = (void*)User_GetMail;
	funcPtrs[27] = (void*)User_PublishOnMyFacebookWall;
	funcPtrs[28] = (void*)User_ReadBinary;
	funcPtrs[29] = (void*)User_WriteBinary;
	funcPtrs[30] = (void*)User_Read;
	funcPtrs[31] = (void*)User_Write;
	funcPtrs[32] = (void*)User_SetProperties;
	funcPtrs[33] = (void*)User_GetProperties;
	funcPtrs[34] = (void*)User_CheckUser;
	funcPtrs[35] = (void*)User_SetAvatarSource;
	funcPtrs[36] = (void*)Game_Score;
	funcPtrs[37] = (void*)Game_GetRank;
	funcPtrs[38] = (void*)Game_BestHighScore;
	funcPtrs[39] = (void*)Game_CenteredScore;
	funcPtrs[40] = (void*)Game_GetRankArray;
	funcPtrs[41] = (void*)Game_BestHighScoreArray;
	funcPtrs[42] = (void*)Game_ReadBinary;
	funcPtrs[43] = (void*)Game_WriteBinary;
	funcPtrs[44] = (void*)Game_Read;
	funcPtrs[45] = (void*)Game_Write;
	funcPtrs[46] = (void*)Tribe_ListUsers;
	funcPtrs[47] = (void*)Tribe_ListGlobalFriends;
	funcPtrs[48] = (void*)Tribe_BlacklistGlobalFriends;
	funcPtrs[49] = (void*)Tribe_ChangeGlobalRelationshipStatus;
	funcPtrs[50] = (void*)Tribe_ListFriends;
	funcPtrs[51] = (void*)Tribe_BlacklistFriends;
	funcPtrs[52] = (void*)Tribe_ChangeRelationshipStatus;
	funcPtrs[53] = (void*)Tribe_ListFacebookFriends;
	funcPtrs[54] = (void*)Tribe_ListGooglePlusFriends;
	funcPtrs[55] = (void*)Tribe_ListGameCenterFriends;
	funcPtrs[56] = (void*)Tribe_InviteFriendByMail;
	funcPtrs[57] = (void*)Tribe_InviteFriendByFBID;
	funcPtrs[58] = (void*)Tribe_InviteFriendByGooglePlusID;
	funcPtrs[59] = (void*)Tribe_FriendsBestHighScore;
	funcPtrs[60] = (void*)Tribe_FriendsBestHighScoreArray;
	funcPtrs[61] = (void*)Tribe_FindOpponents;
	funcPtrs[62] = (void*)Match_GetActiveMatchID;
	funcPtrs[63] = (void*)Match_HasActiveMatch;
	funcPtrs[64] = (void*)Match_GetMatchData;
	funcPtrs[65] = (void*)Match_ListMatch;
	funcPtrs[66] = (void*)Match_ListPendingMatch;
	funcPtrs[67] = (void*)Match_CreateMatch;
	funcPtrs[68] = (void*)Match_InviteFriends;
	funcPtrs[69] = (void*)Match_JoinMatch;
	funcPtrs[70] = (void*)Match_MatchMove;
	funcPtrs[71] = (void*)Match_ReadBinary;
	funcPtrs[72] = (void*)Match_WriteBinary;
	funcPtrs[73] = (void*)Match_Read;
	funcPtrs[74] = (void*)Match_Write;
	funcPtrs[75] = (void*)Notification_NotifyUser;
	funcPtrs[76] = (void*)GooglePlay_IsConnected;
	funcPtrs[77] = (void*)GooglePlay_LoadPeople;
	funcPtrs[78] = (void*)GooglePlay_ShowAllLeaderboards;
	funcPtrs[79] = (void*)GooglePlay_ShowLeaderboard;
	funcPtrs[80] = (void*)GooglePlay_SubmitScore;
	funcPtrs[81] = (void*)GooglePlay_LoadLeaderboardMetadata;
	funcPtrs[82] = (void*)GooglePlay_LoadLeaderboardsMetadata;
	funcPtrs[83] = (void*)GooglePlay_LoadPlayerCenteredScores;
	funcPtrs[84] = (void*)GooglePlay_LoadTopScores;
	funcPtrs[85] = (void*)GooglePlay_ShowAchievements;
	funcPtrs[86] = (void*)GooglePlay_IncrementAchievement;
	funcPtrs[87] = (void*)GooglePlay_LoadAchievements;
	funcPtrs[88] = (void*)GooglePlay_RevealAchievement;
	funcPtrs[89] = (void*)GooglePlay_UnlockAchievement;

	/*
	 * Flags that specify the extension's use of locking and stackswitching
	 */
	int flags[90] = { 0 };

	/*
	 * Register the extension
	 */
	s3eEdkRegister("CloudBuilderMarmalade", funcPtrs, sizeof(funcPtrs), flags, CloudBuilderMarmaladeInit, CloudBuilderMarmaladeTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int CloudBuilderMarmaladeStaticInit()
{
	void** p = g_StaticInitArray;
	void* end = p + g_StaticArrayLen;
	while (*p) p++;
	if (p < end)
		*p = (void*)&CloudBuilderMarmaladeRegisterExt;
	return 0;
}

int g_CloudBuilderMarmaladeVal = CloudBuilderMarmaladeStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
	CloudBuilderMarmaladeRegisterExt();
}
#endif

#endif
