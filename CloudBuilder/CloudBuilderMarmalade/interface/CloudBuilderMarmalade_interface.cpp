/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "CloudBuilderMarmalade.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*CloudBuilderMarmaladeRegister_t)(CloudBuilderMarmaladeCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*CloudBuilderMarmaladeUnRegister_t)(CloudBuilderMarmaladeCallback cbid, s3eCallback fn);
typedef const char*(*CloudBuilderMarmaladeGetErrorString_t)();
typedef CloudBuilderMarmaladeError(*CloudBuilderMarmaladeGetError_t)();
typedef	 void**(*CloudBuilder_Init_t)(void** aCotCFunctions);
typedef	   void(*CloudBuilder_SetGlobalCotCCallback_t)(CloudBuilderMarmaladeCallback aIndex, s3eCallback aCallback, void* aUserData);
typedef	   void(*CloudBuilder_PopCallback_t)();
typedef  s3eResult(*Clan_Setup_t)(const char* aConfigurationJson, s3eCallback aClan_didSetup, void* aUserData);
typedef  s3eResult(*Clan_BatchBegin_t)();
typedef  s3eResult(*Clan_BatchEnd_t)(s3eCallback aClan_didBatchEnd, void* aUserData);
typedef	   bool(*Clan_isSetup_t)();
typedef	   bool(*Clan_isUserLogged_t)();
typedef  s3eResult(*User_RegisterAndLogin_t)(const char* aEmail, const char* aPassword, const char* aPseudo, s3eCallback aUser_didRegisterAndLogin, void* aUserData);
typedef  s3eResult(*User_Login_t)(const char* aPseudo, const char* aPassword, s3eCallback aUser_didLogin, void* aUserData);
typedef  s3eResult(*User_LoginWithFacebook_t)(const char* aOptionalPassword, s3eCallback aUser_didLoginWithFacebook, void* aUserData);
typedef  s3eResult(*User_LoginWithGooglePlus_t)(const char* aOptionalPassword, s3eCallback aUser_didLoginWithGooglePlus, void* aUserData);
typedef  s3eResult(*User_LoginWithGameCenter_t)(s3eCallback aUser_didLoginWithGameCenter, void* aUserData);
typedef  s3eResult(*User_Logout_t)(s3eCallback aUser_didLogout, void* aUserData);
typedef  s3eResult(*User_LinkAccountWithFacebook_t)(s3eCallback aUser_didLinkAccountWithFacebook, void* aUserData);
typedef  s3eResult(*User_LinkAccountWithGooglePlus_t)(s3eCallback aUser_didLinkAccountWithGooglePlus, void* aUserData);
typedef  s3eResult(*User_LinkAccountWithGameCenter_t)(s3eCallback aUser_didLinkAccountWithGameCenter, void* aUserData);
typedef  s3eResult(*User_ChangePassword_t)(const char* aOldPassword, const char* aNewPassword, s3eCallback aUser_didChangePassword, void* aUserData);
typedef  s3eResult(*User_MailPassword_t)(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aUser_didMailPassword, void* aUserData);
typedef  s3eResult(*User_SetUserProfile_t)(const char* aJson, s3eCallback aUser_didSetUserProfile, void* aUserData);
typedef  s3eResult(*User_GetUserProfile_t)(s3eCallback aUser_didGetUserProfile, void* aUserData);
typedef const char*(*User_GetPseudo_t)();
typedef const char*(*User_GetMail_t)();
typedef  s3eResult(*User_PublishOnMyFacebookWall_t)(const char* aMessage, s3eCallback aUser_didPublishOnMyFacebookWall, void* aUserData);
typedef  s3eResult(*User_ReadBinary_t)(const char* aKey, s3eCallback aUser_didReadBinary, void* aUserData);
typedef  s3eResult(*User_WriteBinary_t)(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aUser_didWriteBinary, void* aUserData);
typedef  s3eResult(*User_Read_t)(const char* aKey, s3eCallback aUser_didRead, void* aUserData);
typedef  s3eResult(*User_Write_t)(const char* aKey, const char* aValue, s3eCallback aUser_didWrite, void* aUserData);
typedef  s3eResult(*User_SetProperties_t)(bool aCanBeFound, const char* aPropertiesJson, s3eCallback aUser_didSetProperties, void* aUserData);
typedef  s3eResult(*User_GetProperties_t)(s3eCallback aUser_didGetProperties, void* aUserData);
typedef  s3eResult(*User_CheckUser_t)(const char* aIdent, s3eCallback aUser_didCheckUser, void* aUserData);
typedef  s3eResult(*User_SetAvatarSource_t)(cbmExternalNetwork aSource, s3eCallback aUser_didSetAvatarSource, void* aUserData);
typedef  s3eResult(*Game_Score_t)(long long aHighScore, const char* aMode, cbmScoreType aScoreType, const char* aInfoScore, bool aMayVary, s3eCallback aGame_didScore, void* aUserData);
typedef  s3eResult(*Game_GetRank_t)(long long aHighScore, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didGetRank, void* aUserData);
typedef  s3eResult(*Game_BestHighScore_t)(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScore, void* aUserData);
typedef  s3eResult(*Game_CenteredScore_t)(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didCenteredScore, void* aUserData);
typedef  s3eResult(*Game_GetRankArray_t)(const char* aScoreArrayJson, cbmScoreType aScoreType, s3eCallback aGame_didGetRankArray, void* aUserData);
typedef  s3eResult(*Game_BestHighScoreArray_t)(int aCount, const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScoreArray, void* aUserData);
typedef  s3eResult(*Game_ReadBinary_t)(const char* aKey, s3eCallback aGame_didReadBinary, void* aUserData);
typedef  s3eResult(*Game_WriteBinary_t)(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aGame_didWriteBinary, void* aUserData);
typedef  s3eResult(*Game_Read_t)(const char* aKey, s3eCallback aGame_didRead, void* aUserData);
typedef  s3eResult(*Game_Write_t)(const char* aKey, const char* aValue, s3eCallback aGame_didWrite, void* aUserData);
typedef  s3eResult(*Tribe_ListUsers_t)(const char* aContainsString, s3eCallback aTribe_didListUsers, void* aUserData);
typedef  s3eResult(*Tribe_ListGlobalFriends_t)(s3eCallback aTribe_didListGlobalFriends, void* aUserData);
typedef  s3eResult(*Tribe_BlacklistGlobalFriends_t)(s3eCallback aTribe_didBlacklistGlobalFriends, void* aUserData);
typedef  s3eResult(*Tribe_ChangeGlobalRelationshipStatus_t)(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeGlobalRelationshipStatus, void* aUserData);
typedef  s3eResult(*Tribe_ListFriends_t)(s3eCallback aTribe_didListFriends, void* aUserData);
typedef  s3eResult(*Tribe_BlacklistFriends_t)(s3eCallback aTribe_didBlacklistFriends, void* aUserData);
typedef  s3eResult(*Tribe_ChangeRelationshipStatus_t)(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeRelationshipStatus, void* aUserData);
typedef  s3eResult(*Tribe_ListFacebookFriends_t)(s3eCallback aTribe_didListFacebookFriends, void* aUserData);
typedef  s3eResult(*Tribe_ListGooglePlusFriends_t)(s3eCallback aTribe_didListGooglePlusFriends, void* aUserData);
typedef  s3eResult(*Tribe_ListGameCenterFriends_t)(s3eCallback aTribe_didListGameCenterFriends, void* aUserData);
typedef  s3eResult(*Tribe_InviteFriendByMail_t)(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aTribe_didInviteFriendByMail, void* aUserData);
typedef  s3eResult(*Tribe_InviteFriendByFBID_t)(const char* aFBFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByFBID, void* aUserData);
typedef  s3eResult(*Tribe_InviteFriendByGooglePlusID_t)(const char* aGooglePlusFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByGooglePlusID, void* aUserData);
typedef  s3eResult(*Tribe_FriendsBestHighScore_t)(const char* aMode, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScore, void* aUserData);
typedef  s3eResult(*Tribe_FriendsBestHighScoreArray_t)(const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScoreArray, void* aUserData);
typedef  s3eResult(*Tribe_FindOpponents_t)(const char* aFilterJson, s3eCallback aTribe_didFindOpponents, void* aUserData);
typedef const char*(*Match_GetActiveMatchID_t)();
typedef	   bool(*Match_HasActiveMatch_t)();
typedef  s3eResult(*Match_GetMatchData_t)(const char* aMatchID, s3eCallback aMatch_didGetMatchData, void* aUserData);
typedef  s3eResult(*Match_ListMatch_t)(bool aIncludeAllData, s3eCallback aMatch_didListMatch, void* aUserData);
typedef  s3eResult(*Match_ListPendingMatch_t)(s3eCallback aMatch_didListPendingMatch, void* aUserData);
typedef  s3eResult(*Match_CreateMatch_t)(const char* aName, bool aPrivateMatch, const char* aMatchDataJson, s3eCallback aMatch_didCreateMatch, void* aUserData);
typedef  s3eResult(*Match_InviteFriends_t)(const char* aMatchID, const char* aArrayFriendsJson, bool aAutoAccept, const char* aNotifMessageJson, s3eCallback aMatch_didInviteFriends, void* aUserData);
typedef  s3eResult(*Match_JoinMatch_t)(const char* aMatchID, bool aAccept, const char* aNotifMessageJson, s3eCallback aMatch_didJoinMatch, void* aUserData);
typedef  s3eResult(*Match_MatchMove_t)(cbmMatchPhase aMatchPhase, const char* aMatchID, const char* aMatchStateJson, const char* aNotifMessageJson, s3eCallback aMatch_didMatchMove, void* aUserData);
typedef  s3eResult(*Match_ReadBinary_t)(const char* aMatchID, const char* aKey, s3eCallback aMatch_didReadBinary, void* aUserData);
typedef  s3eResult(*Match_WriteBinary_t)(const char* aMatchID, const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aMatch_didWriteBinary, void* aUserData);
typedef  s3eResult(*Match_Read_t)(const char* aMatchID, const char* aKey, s3eCallback aMatch_didRead, void* aUserData);
typedef  s3eResult(*Match_Write_t)(const char* aMatchID, const char* aKey, const char* aValue, s3eCallback aMatch_didWrite, void* aUserData);
typedef  s3eResult(*Notification_NotifyUser_t)(const char* aUserPseudo, const char* aDataJson, void* aReference, const char* apnMessageJson, s3eCallback aNotification_didNotifyUser, void* aUserData);
typedef	   bool(*GooglePlay_IsConnected_t)();
typedef  s3eResult(*GooglePlay_LoadPeople_t)(const char* aListPeopleJSON, s3eCallback aGooglePlay_didLoadPeople, void* aUserData);
typedef  s3eResult(*GooglePlay_ShowAllLeaderboards_t)();
typedef  s3eResult(*GooglePlay_ShowLeaderboard_t)(const char* aLeaderboardID);
typedef  s3eResult(*GooglePlay_SubmitScore_t)(const char* aLeaderboardID, long aScore, const char* aTag, s3eCallback aGooglePlay_didSubmitScore, void* aUserData);
typedef  s3eResult(*GooglePlay_LoadLeaderboardMetadata_t)(const char* aLeaderboardID, s3eCallback aGooglePlay_didLoadLeaderboardMetadata, void* aUserData);
typedef  s3eResult(*GooglePlay_LoadLeaderboardsMetadata_t)(s3eCallback aGooglePlay_didLoadLeaderboardsMetadata, void* aUserData);
typedef  s3eResult(*GooglePlay_LoadPlayerCenteredScores_t)(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadPlayerCenteredScores, void* aUserData);
typedef  s3eResult(*GooglePlay_LoadTopScores_t)(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadTopScores, void* aUserData);
typedef  s3eResult(*GooglePlay_ShowAchievements_t)();
typedef  s3eResult(*GooglePlay_IncrementAchievement_t)(const char* aAchievementID, int aNumSteps, s3eCallback aGooglePlay_didIncrementAchievement, void* aUserData);
typedef  s3eResult(*GooglePlay_LoadAchievements_t)(bool aForceReload, s3eCallback aGooglePlay_didLoadAchievements, void* aUserData);
typedef  s3eResult(*GooglePlay_RevealAchievement_t)(const char* aAchievementID, s3eCallback aGooglePlay_didRevealAchievement, void* aUserData);
typedef  s3eResult(*GooglePlay_UnlockAchievement_t)(const char* aAchievementID, s3eCallback aGooglePlay_didUnlockAchievement, void* aUserData);

/**
 * struct that gets filled in by CloudBuilderMarmaladeRegister
 */
typedef struct CloudBuilderMarmaladeFuncs
{
	CloudBuilderMarmaladeRegister_t m_CloudBuilderMarmaladeRegister;
	CloudBuilderMarmaladeUnRegister_t m_CloudBuilderMarmaladeUnRegister;
	CloudBuilderMarmaladeGetErrorString_t m_CloudBuilderMarmaladeGetErrorString;
	CloudBuilderMarmaladeGetError_t m_CloudBuilderMarmaladeGetError;
	CloudBuilder_Init_t m_CloudBuilder_Init;
	CloudBuilder_SetGlobalCotCCallback_t m_CloudBuilder_SetGlobalCotCCallback;
	CloudBuilder_PopCallback_t m_CloudBuilder_PopCallback;
	Clan_Setup_t m_Clan_Setup;
	Clan_BatchBegin_t m_Clan_BatchBegin;
	Clan_BatchEnd_t m_Clan_BatchEnd;
	Clan_isSetup_t m_Clan_isSetup;
	Clan_isUserLogged_t m_Clan_isUserLogged;
	User_RegisterAndLogin_t m_User_RegisterAndLogin;
	User_Login_t m_User_Login;
	User_LoginWithFacebook_t m_User_LoginWithFacebook;
	User_LoginWithGooglePlus_t m_User_LoginWithGooglePlus;
	User_LoginWithGameCenter_t m_User_LoginWithGameCenter;
	User_Logout_t m_User_Logout;
	User_LinkAccountWithFacebook_t m_User_LinkAccountWithFacebook;
	User_LinkAccountWithGooglePlus_t m_User_LinkAccountWithGooglePlus;
	User_LinkAccountWithGameCenter_t m_User_LinkAccountWithGameCenter;
	User_ChangePassword_t m_User_ChangePassword;
	User_MailPassword_t m_User_MailPassword;
	User_SetUserProfile_t m_User_SetUserProfile;
	User_GetUserProfile_t m_User_GetUserProfile;
	User_GetPseudo_t m_User_GetPseudo;
	User_GetMail_t m_User_GetMail;
	User_PublishOnMyFacebookWall_t m_User_PublishOnMyFacebookWall;
	User_ReadBinary_t m_User_ReadBinary;
	User_WriteBinary_t m_User_WriteBinary;
	User_Read_t m_User_Read;
	User_Write_t m_User_Write;
	User_SetProperties_t m_User_SetProperties;
	User_GetProperties_t m_User_GetProperties;
	User_CheckUser_t m_User_CheckUser;
	User_SetAvatarSource_t m_User_SetAvatarSource;
	Game_Score_t m_Game_Score;
	Game_GetRank_t m_Game_GetRank;
	Game_BestHighScore_t m_Game_BestHighScore;
	Game_CenteredScore_t m_Game_CenteredScore;
	Game_GetRankArray_t m_Game_GetRankArray;
	Game_BestHighScoreArray_t m_Game_BestHighScoreArray;
	Game_ReadBinary_t m_Game_ReadBinary;
	Game_WriteBinary_t m_Game_WriteBinary;
	Game_Read_t m_Game_Read;
	Game_Write_t m_Game_Write;
	Tribe_ListUsers_t m_Tribe_ListUsers;
	Tribe_ListGlobalFriends_t m_Tribe_ListGlobalFriends;
	Tribe_BlacklistGlobalFriends_t m_Tribe_BlacklistGlobalFriends;
	Tribe_ChangeGlobalRelationshipStatus_t m_Tribe_ChangeGlobalRelationshipStatus;
	Tribe_ListFriends_t m_Tribe_ListFriends;
	Tribe_BlacklistFriends_t m_Tribe_BlacklistFriends;
	Tribe_ChangeRelationshipStatus_t m_Tribe_ChangeRelationshipStatus;
	Tribe_ListFacebookFriends_t m_Tribe_ListFacebookFriends;
	Tribe_ListGooglePlusFriends_t m_Tribe_ListGooglePlusFriends;
	Tribe_ListGameCenterFriends_t m_Tribe_ListGameCenterFriends;
	Tribe_InviteFriendByMail_t m_Tribe_InviteFriendByMail;
	Tribe_InviteFriendByFBID_t m_Tribe_InviteFriendByFBID;
	Tribe_InviteFriendByGooglePlusID_t m_Tribe_InviteFriendByGooglePlusID;
	Tribe_FriendsBestHighScore_t m_Tribe_FriendsBestHighScore;
	Tribe_FriendsBestHighScoreArray_t m_Tribe_FriendsBestHighScoreArray;
	Tribe_FindOpponents_t m_Tribe_FindOpponents;
	Match_GetActiveMatchID_t m_Match_GetActiveMatchID;
	Match_HasActiveMatch_t m_Match_HasActiveMatch;
	Match_GetMatchData_t m_Match_GetMatchData;
	Match_ListMatch_t m_Match_ListMatch;
	Match_ListPendingMatch_t m_Match_ListPendingMatch;
	Match_CreateMatch_t m_Match_CreateMatch;
	Match_InviteFriends_t m_Match_InviteFriends;
	Match_JoinMatch_t m_Match_JoinMatch;
	Match_MatchMove_t m_Match_MatchMove;
	Match_ReadBinary_t m_Match_ReadBinary;
	Match_WriteBinary_t m_Match_WriteBinary;
	Match_Read_t m_Match_Read;
	Match_Write_t m_Match_Write;
	Notification_NotifyUser_t m_Notification_NotifyUser;
	GooglePlay_IsConnected_t m_GooglePlay_IsConnected;
	GooglePlay_LoadPeople_t m_GooglePlay_LoadPeople;
	GooglePlay_ShowAllLeaderboards_t m_GooglePlay_ShowAllLeaderboards;
	GooglePlay_ShowLeaderboard_t m_GooglePlay_ShowLeaderboard;
	GooglePlay_SubmitScore_t m_GooglePlay_SubmitScore;
	GooglePlay_LoadLeaderboardMetadata_t m_GooglePlay_LoadLeaderboardMetadata;
	GooglePlay_LoadLeaderboardsMetadata_t m_GooglePlay_LoadLeaderboardsMetadata;
	GooglePlay_LoadPlayerCenteredScores_t m_GooglePlay_LoadPlayerCenteredScores;
	GooglePlay_LoadTopScores_t m_GooglePlay_LoadTopScores;
	GooglePlay_ShowAchievements_t m_GooglePlay_ShowAchievements;
	GooglePlay_IncrementAchievement_t m_GooglePlay_IncrementAchievement;
	GooglePlay_LoadAchievements_t m_GooglePlay_LoadAchievements;
	GooglePlay_RevealAchievement_t m_GooglePlay_RevealAchievement;
	GooglePlay_UnlockAchievement_t m_GooglePlay_UnlockAchievement;
} CloudBuilderMarmaladeFuncs;

static CloudBuilderMarmaladeFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
	if (!g_GotExt && !g_TriedExt)
	{
		s3eResult res = s3eExtGetHash(0xbd728b87, &g_Ext, sizeof(g_Ext));
		if (res == S3E_RESULT_SUCCESS)
			g_GotExt = true;
		else
			s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,				 "error loading extension: CloudBuilderMarmalade");

		g_TriedExt = true;
		g_TriedNoMsgExt = true;
	}

	return g_GotExt;
}

static bool _extLoadNoMsg()
{
	if (!g_GotExt && !g_TriedNoMsgExt)
	{
		s3eResult res = s3eExtGetHash(0xbd728b87, &g_Ext, sizeof(g_Ext));
		if (res == S3E_RESULT_SUCCESS)
			g_GotExt = true;
		g_TriedNoMsgExt = true;
		if (g_TriedExt)
			g_TriedExt = true;
	}

	return g_GotExt;
}

s3eBool CloudBuilderMarmaladeAvailable()
{
	_extLoadNoMsg();
	return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult CloudBuilderMarmaladeRegister(CloudBuilderMarmaladeCallback cbid, s3eCallback fn, void* userData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[0] func: CloudBuilderMarmaladeRegister"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_CloudBuilderMarmaladeRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult CloudBuilderMarmaladeUnRegister(CloudBuilderMarmaladeCallback cbid, s3eCallback fn)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[1] func: CloudBuilderMarmaladeUnRegister"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_CloudBuilderMarmaladeUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

const char* CloudBuilderMarmaladeGetErrorString()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[2] func: CloudBuilderMarmaladeGetErrorString"));

	if (!_extLoad())
		return NULL;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	const char* ret = g_Ext.m_CloudBuilderMarmaladeGetErrorString();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

CloudBuilderMarmaladeError CloudBuilderMarmaladeGetError()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[3] func: CloudBuilderMarmaladeGetError"));

	if (!_extLoad())
		return (CloudBuilderMarmaladeError)0;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	CloudBuilderMarmaladeError ret = g_Ext.m_CloudBuilderMarmaladeGetError();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

void** CloudBuilder_Init(void** aCotCFunctions)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[4] func: CloudBuilder_Init"));

	if (!_extLoad())
		return NULL;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	void** ret = g_Ext.m_CloudBuilder_Init(aCotCFunctions);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

void CloudBuilder_SetGlobalCotCCallback(CloudBuilderMarmaladeCallback aIndex, s3eCallback aCallback, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[5] func: CloudBuilder_SetGlobalCotCCallback"));

	if (!_extLoad())
		return;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	g_Ext.m_CloudBuilder_SetGlobalCotCCallback(aIndex, aCallback, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return;
}

void CloudBuilder_PopCallback()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[6] func: CloudBuilder_PopCallback"));

	if (!_extLoad())
		return;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	g_Ext.m_CloudBuilder_PopCallback();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return;
}

s3eResult Clan_Setup(const char* aConfigurationJson, s3eCallback aClan_didSetup, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[7] func: Clan_Setup"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Clan_Setup(aConfigurationJson, aClan_didSetup, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Clan_BatchBegin()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[8] func: Clan_BatchBegin"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Clan_BatchBegin();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Clan_BatchEnd(s3eCallback aClan_didBatchEnd, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[9] func: Clan_BatchEnd"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Clan_BatchEnd(aClan_didBatchEnd, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

bool Clan_isSetup()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[10] func: Clan_isSetup"));

	if (!_extLoad())
		return false;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	bool ret = g_Ext.m_Clan_isSetup();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

bool Clan_isUserLogged()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[11] func: Clan_isUserLogged"));

	if (!_extLoad())
		return false;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	bool ret = g_Ext.m_Clan_isUserLogged();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_RegisterAndLogin(const char* aEmail, const char* aPassword, const char* aPseudo, s3eCallback aUser_didRegisterAndLogin, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[12] func: User_RegisterAndLogin"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_RegisterAndLogin(aEmail, aPassword, aPseudo, aUser_didRegisterAndLogin, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_Login(const char* aPseudo, const char* aPassword, s3eCallback aUser_didLogin, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[13] func: User_Login"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_Login(aPseudo, aPassword, aUser_didLogin, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LoginWithFacebook(const char* aOptionalPassword, s3eCallback aUser_didLoginWithFacebook, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[14] func: User_LoginWithFacebook"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LoginWithFacebook(aOptionalPassword, aUser_didLoginWithFacebook, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LoginWithGooglePlus(const char* aOptionalPassword, s3eCallback aUser_didLoginWithGooglePlus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[15] func: User_LoginWithGooglePlus"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LoginWithGooglePlus(aOptionalPassword, aUser_didLoginWithGooglePlus, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LoginWithGameCenter(s3eCallback aUser_didLoginWithGameCenter, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[16] func: User_LoginWithGameCenter"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LoginWithGameCenter(aUser_didLoginWithGameCenter, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_Logout(s3eCallback aUser_didLogout, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[17] func: User_Logout"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_Logout(aUser_didLogout, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LinkAccountWithFacebook(s3eCallback aUser_didLinkAccountWithFacebook, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[18] func: User_LinkAccountWithFacebook"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LinkAccountWithFacebook(aUser_didLinkAccountWithFacebook, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LinkAccountWithGooglePlus(s3eCallback aUser_didLinkAccountWithGooglePlus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[19] func: User_LinkAccountWithGooglePlus"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LinkAccountWithGooglePlus(aUser_didLinkAccountWithGooglePlus, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_LinkAccountWithGameCenter(s3eCallback aUser_didLinkAccountWithGameCenter, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[20] func: User_LinkAccountWithGameCenter"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_LinkAccountWithGameCenter(aUser_didLinkAccountWithGameCenter, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_ChangePassword(const char* aOldPassword, const char* aNewPassword, s3eCallback aUser_didChangePassword, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[21] func: User_ChangePassword"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_ChangePassword(aOldPassword, aNewPassword, aUser_didChangePassword, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_MailPassword(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aUser_didMailPassword, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[22] func: User_MailPassword"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_MailPassword(aEmail, aSubject, aBody, aUser_didMailPassword, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_SetUserProfile(const char* aJson, s3eCallback aUser_didSetUserProfile, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[23] func: User_SetUserProfile"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_SetUserProfile(aJson, aUser_didSetUserProfile, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_GetUserProfile(s3eCallback aUser_didGetUserProfile, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[24] func: User_GetUserProfile"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_GetUserProfile(aUser_didGetUserProfile, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

const char* User_GetPseudo()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[25] func: User_GetPseudo"));

	if (!_extLoad())
		return NULL;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	const char* ret = g_Ext.m_User_GetPseudo();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

const char* User_GetMail()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[26] func: User_GetMail"));

	if (!_extLoad())
		return NULL;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	const char* ret = g_Ext.m_User_GetMail();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_PublishOnMyFacebookWall(const char* aMessage, s3eCallback aUser_didPublishOnMyFacebookWall, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[27] func: User_PublishOnMyFacebookWall"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_PublishOnMyFacebookWall(aMessage, aUser_didPublishOnMyFacebookWall, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_ReadBinary(const char* aKey, s3eCallback aUser_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[28] func: User_ReadBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_ReadBinary(aKey, aUser_didReadBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_WriteBinary(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aUser_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[29] func: User_WriteBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_WriteBinary(aKey, aPointer, aLength, aUser_didWriteBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_Read(const char* aKey, s3eCallback aUser_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[30] func: User_Read"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_Read(aKey, aUser_didRead, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_Write(const char* aKey, const char* aValue, s3eCallback aUser_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[31] func: User_Write"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_Write(aKey, aValue, aUser_didWrite, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_SetProperties(bool aCanBeFound, const char* aPropertiesJson, s3eCallback aUser_didSetProperties, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[32] func: User_SetProperties"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_SetProperties(aCanBeFound, aPropertiesJson, aUser_didSetProperties, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_GetProperties(s3eCallback aUser_didGetProperties, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[33] func: User_GetProperties"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_GetProperties(aUser_didGetProperties, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_CheckUser(const char* aIdent, s3eCallback aUser_didCheckUser, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[34] func: User_CheckUser"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_CheckUser(aIdent, aUser_didCheckUser, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult User_SetAvatarSource(cbmExternalNetwork aSource, s3eCallback aUser_didSetAvatarSource, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[35] func: User_SetAvatarSource"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_User_SetAvatarSource(aSource, aUser_didSetAvatarSource, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_Score(long long aHighScore, const char* aMode, cbmScoreType aScoreType, const char* aInfoScore, bool aMayVary, s3eCallback aGame_didScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[36] func: Game_Score"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_Score(aHighScore, aMode, aScoreType, aInfoScore, aMayVary, aGame_didScore, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_GetRank(long long aHighScore, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didGetRank, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[37] func: Game_GetRank"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_GetRank(aHighScore, aMode, aScoreType, aGame_didGetRank, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_BestHighScore(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[38] func: Game_BestHighScore"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_BestHighScore(aCount, aMode, aScoreType, aGame_didBestHighScore, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_CenteredScore(int aCount, const char* aMode, cbmScoreType aScoreType, s3eCallback aGame_didCenteredScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[39] func: Game_CenteredScore"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_CenteredScore(aCount, aMode, aScoreType, aGame_didCenteredScore, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_GetRankArray(const char* aScoreArrayJson, cbmScoreType aScoreType, s3eCallback aGame_didGetRankArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[40] func: Game_GetRankArray"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_GetRankArray(aScoreArrayJson, aScoreType, aGame_didGetRankArray, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_BestHighScoreArray(int aCount, const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aGame_didBestHighScoreArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[41] func: Game_BestHighScoreArray"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_BestHighScoreArray(aCount, aArrayModesJson, aScoreType, aGame_didBestHighScoreArray, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_ReadBinary(const char* aKey, s3eCallback aGame_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[42] func: Game_ReadBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_ReadBinary(aKey, aGame_didReadBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_WriteBinary(const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aGame_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[43] func: Game_WriteBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_WriteBinary(aKey, aPointer, aLength, aGame_didWriteBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_Read(const char* aKey, s3eCallback aGame_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[44] func: Game_Read"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_Read(aKey, aGame_didRead, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Game_Write(const char* aKey, const char* aValue, s3eCallback aGame_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[45] func: Game_Write"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Game_Write(aKey, aValue, aGame_didWrite, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListUsers(const char* aContainsString, s3eCallback aTribe_didListUsers, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[46] func: Tribe_ListUsers"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListUsers(aContainsString, aTribe_didListUsers, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListGlobalFriends(s3eCallback aTribe_didListGlobalFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[47] func: Tribe_ListGlobalFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListGlobalFriends(aTribe_didListGlobalFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_BlacklistGlobalFriends(s3eCallback aTribe_didBlacklistGlobalFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[48] func: Tribe_BlacklistGlobalFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_BlacklistGlobalFriends(aTribe_didBlacklistGlobalFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ChangeGlobalRelationshipStatus(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeGlobalRelationshipStatus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[49] func: Tribe_ChangeGlobalRelationshipStatus"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ChangeGlobalRelationshipStatus(aFriendPseudo, aNewState, aTribe_didChangeGlobalRelationshipStatus, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListFriends(s3eCallback aTribe_didListFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[50] func: Tribe_ListFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListFriends(aTribe_didListFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_BlacklistFriends(s3eCallback aTribe_didBlacklistFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[51] func: Tribe_BlacklistFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_BlacklistFriends(aTribe_didBlacklistFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ChangeRelationshipStatus(const char* aFriendPseudo, cbmRelationChange aNewState, s3eCallback aTribe_didChangeRelationshipStatus, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[52] func: Tribe_ChangeRelationshipStatus"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ChangeRelationshipStatus(aFriendPseudo, aNewState, aTribe_didChangeRelationshipStatus, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListFacebookFriends(s3eCallback aTribe_didListFacebookFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[53] func: Tribe_ListFacebookFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListFacebookFriends(aTribe_didListFacebookFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListGooglePlusFriends(s3eCallback aTribe_didListGooglePlusFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[54] func: Tribe_ListGooglePlusFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListGooglePlusFriends(aTribe_didListGooglePlusFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_ListGameCenterFriends(s3eCallback aTribe_didListGameCenterFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[55] func: Tribe_ListGameCenterFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_ListGameCenterFriends(aTribe_didListGameCenterFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_InviteFriendByMail(const char* aEmail, const char* aSubject, const char* aBody, s3eCallback aTribe_didInviteFriendByMail, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[56] func: Tribe_InviteFriendByMail"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_InviteFriendByMail(aEmail, aSubject, aBody, aTribe_didInviteFriendByMail, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_InviteFriendByFBID(const char* aFBFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByFBID, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[57] func: Tribe_InviteFriendByFBID"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_InviteFriendByFBID(aFBFriendID, aParamsJson, aTribe_didInviteFriendByFBID, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_InviteFriendByGooglePlusID(const char* aGooglePlusFriendID, const char* aParamsJson, s3eCallback aTribe_didInviteFriendByGooglePlusID, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[58] func: Tribe_InviteFriendByGooglePlusID"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_InviteFriendByGooglePlusID(aGooglePlusFriendID, aParamsJson, aTribe_didInviteFriendByGooglePlusID, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_FriendsBestHighScore(const char* aMode, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[59] func: Tribe_FriendsBestHighScore"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_FriendsBestHighScore(aMode, aScoreType, aTribe_didFriendsBestHighScore, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_FriendsBestHighScoreArray(const char* aArrayModesJson, cbmScoreType aScoreType, s3eCallback aTribe_didFriendsBestHighScoreArray, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[60] func: Tribe_FriendsBestHighScoreArray"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_FriendsBestHighScoreArray(aArrayModesJson, aScoreType, aTribe_didFriendsBestHighScoreArray, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Tribe_FindOpponents(const char* aFilterJson, s3eCallback aTribe_didFindOpponents, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[61] func: Tribe_FindOpponents"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Tribe_FindOpponents(aFilterJson, aTribe_didFindOpponents, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

const char* Match_GetActiveMatchID()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[62] func: Match_GetActiveMatchID"));

	if (!_extLoad())
		return NULL;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	const char* ret = g_Ext.m_Match_GetActiveMatchID();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

bool Match_HasActiveMatch()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[63] func: Match_HasActiveMatch"));

	if (!_extLoad())
		return false;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	bool ret = g_Ext.m_Match_HasActiveMatch();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_GetMatchData(const char* aMatchID, s3eCallback aMatch_didGetMatchData, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[64] func: Match_GetMatchData"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_GetMatchData(aMatchID, aMatch_didGetMatchData, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_ListMatch(bool aIncludeAllData, s3eCallback aMatch_didListMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[65] func: Match_ListMatch"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_ListMatch(aIncludeAllData, aMatch_didListMatch, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_ListPendingMatch(s3eCallback aMatch_didListPendingMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[66] func: Match_ListPendingMatch"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_ListPendingMatch(aMatch_didListPendingMatch, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_CreateMatch(const char* aName, bool aPrivateMatch, const char* aMatchDataJson, s3eCallback aMatch_didCreateMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[67] func: Match_CreateMatch"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_CreateMatch(aName, aPrivateMatch, aMatchDataJson, aMatch_didCreateMatch, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_InviteFriends(const char* aMatchID, const char* aArrayFriendsJson, bool aAutoAccept, const char* aNotifMessageJson, s3eCallback aMatch_didInviteFriends, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[68] func: Match_InviteFriends"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_InviteFriends(aMatchID, aArrayFriendsJson, aAutoAccept, aNotifMessageJson, aMatch_didInviteFriends, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_JoinMatch(const char* aMatchID, bool aAccept, const char* aNotifMessageJson, s3eCallback aMatch_didJoinMatch, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[69] func: Match_JoinMatch"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_JoinMatch(aMatchID, aAccept, aNotifMessageJson, aMatch_didJoinMatch, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_MatchMove(cbmMatchPhase aMatchPhase, const char* aMatchID, const char* aMatchStateJson, const char* aNotifMessageJson, s3eCallback aMatch_didMatchMove, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[70] func: Match_MatchMove"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_MatchMove(aMatchPhase, aMatchID, aMatchStateJson, aNotifMessageJson, aMatch_didMatchMove, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_ReadBinary(const char* aMatchID, const char* aKey, s3eCallback aMatch_didReadBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[71] func: Match_ReadBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_ReadBinary(aMatchID, aKey, aMatch_didReadBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_WriteBinary(const char* aMatchID, const char* aKey, void* aPointer, unsigned long aLength, s3eCallback aMatch_didWriteBinary, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[72] func: Match_WriteBinary"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_WriteBinary(aMatchID, aKey, aPointer, aLength, aMatch_didWriteBinary, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_Read(const char* aMatchID, const char* aKey, s3eCallback aMatch_didRead, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[73] func: Match_Read"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_Read(aMatchID, aKey, aMatch_didRead, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Match_Write(const char* aMatchID, const char* aKey, const char* aValue, s3eCallback aMatch_didWrite, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[74] func: Match_Write"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Match_Write(aMatchID, aKey, aValue, aMatch_didWrite, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult Notification_NotifyUser(const char* aUserPseudo, const char* aDataJson, void* aReference, const char* apnMessageJson, s3eCallback aNotification_didNotifyUser, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[75] func: Notification_NotifyUser"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_Notification_NotifyUser(aUserPseudo, aDataJson, aReference, apnMessageJson, aNotification_didNotifyUser, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

bool GooglePlay_IsConnected()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[76] func: GooglePlay_IsConnected"));

	if (!_extLoad())
		return false;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	bool ret = g_Ext.m_GooglePlay_IsConnected();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadPeople(const char* aListPeopleJSON, s3eCallback aGooglePlay_didLoadPeople, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[77] func: GooglePlay_LoadPeople"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadPeople(aListPeopleJSON, aGooglePlay_didLoadPeople, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_ShowAllLeaderboards()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[78] func: GooglePlay_ShowAllLeaderboards"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_ShowAllLeaderboards();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_ShowLeaderboard(const char* aLeaderboardID)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[79] func: GooglePlay_ShowLeaderboard"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_ShowLeaderboard(aLeaderboardID);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_SubmitScore(const char* aLeaderboardID, long aScore, const char* aTag, s3eCallback aGooglePlay_didSubmitScore, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[80] func: GooglePlay_SubmitScore"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_SubmitScore(aLeaderboardID, aScore, aTag, aGooglePlay_didSubmitScore, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadLeaderboardMetadata(const char* aLeaderboardID, s3eCallback aGooglePlay_didLoadLeaderboardMetadata, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[81] func: GooglePlay_LoadLeaderboardMetadata"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadLeaderboardMetadata(aLeaderboardID, aGooglePlay_didLoadLeaderboardMetadata, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadLeaderboardsMetadata(s3eCallback aGooglePlay_didLoadLeaderboardsMetadata, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[82] func: GooglePlay_LoadLeaderboardsMetadata"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadLeaderboardsMetadata(aGooglePlay_didLoadLeaderboardsMetadata, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadPlayerCenteredScores(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadPlayerCenteredScores, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[83] func: GooglePlay_LoadPlayerCenteredScores"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadPlayerCenteredScores(aLeaderboardID, aSpan, aLeaderboardCollection, aMaxResults, aForceReload, aGooglePlay_didLoadPlayerCenteredScores, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadTopScores(const char* aLeaderboardID, cbmGooglePlayTimeSpan aSpan, cbmGooglePlayLeaderboardCollection aLeaderboardCollection, int aMaxResults, bool aForceReload, s3eCallback aGooglePlay_didLoadTopScores, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[84] func: GooglePlay_LoadTopScores"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadTopScores(aLeaderboardID, aSpan, aLeaderboardCollection, aMaxResults, aForceReload, aGooglePlay_didLoadTopScores, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_ShowAchievements()
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[85] func: GooglePlay_ShowAchievements"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_ShowAchievements();

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_IncrementAchievement(const char* aAchievementID, int aNumSteps, s3eCallback aGooglePlay_didIncrementAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[86] func: GooglePlay_IncrementAchievement"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_IncrementAchievement(aAchievementID, aNumSteps, aGooglePlay_didIncrementAchievement, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_LoadAchievements(bool aForceReload, s3eCallback aGooglePlay_didLoadAchievements, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[87] func: GooglePlay_LoadAchievements"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_LoadAchievements(aForceReload, aGooglePlay_didLoadAchievements, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_RevealAchievement(const char* aAchievementID, s3eCallback aGooglePlay_didRevealAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[88] func: GooglePlay_RevealAchievement"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_RevealAchievement(aAchievementID, aGooglePlay_didRevealAchievement, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}

s3eResult GooglePlay_UnlockAchievement(const char* aAchievementID, s3eCallback aGooglePlay_didUnlockAchievement, void* aUserData)
{
	IwTrace(CLOUDBUILDERMARMALADE_VERBOSE, ("calling CloudBuilderMarmalade[89] func: GooglePlay_UnlockAchievement"));

	if (!_extLoad())
		return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

	s3eResult ret = g_Ext.m_GooglePlay_UnlockAchievement(aAchievementID, aGooglePlay_didUnlockAchievement, aUserData);

#ifdef LOADER_CALL_LOCK
	s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

	return ret;
}
